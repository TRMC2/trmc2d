                    ---------------------------
                    tempd: a temperature daemon
                    ---------------------------

    This package contains the source code of tempd: a temperature
    daemon, based on libtrmc2, for driving the TRMC2 temperature
    controller. It also has the code for trmc2shell, a non-network shell
    for the TRMC2 speaking the same language as tempd, and for a couple
    of plugins (interpolate-linear.so and interpolate.so) to convert raw
    measurements to temperature by interpolating tabulated values.

REQUIREMENTS

    For building tempd, you will need libtrmc2 and its associated header
    file Trmc.h installed somewhere your compiler can find them. If they
    are installed somewhere gcc won't look, you will have to edit the
    Makefile and add the appropriate -I and -L options.

    If you want to build trmc2shell, you will also need libreadline and
    libtermcap, which a quite standanrd.

    For the interpolate.so plugin, you will need GSL, the GNU Scientific
    Library, available from <URL:http://www.gnu.org/software/gsl/>. The
    simpler interpolate-linear.so does not have this dependency.

COMPILING

    Just type `make'. You will get tempd, trmc2shell and
    interpolate-linear.so.

    If you have GSL and want to make interpolate.so, type `make
    interpolate.so'.

RUNNING

    Type `tempd -d' as root, then connect a client to /tmp/tempd-socket.

    Or type `trmc2shell' as root and talk to it at the keyboard.

FILES

    README:             this file
    protocol.html:      documentation of the tempd language
    plugins.html:       documentation on writing plugins
    Makefile:           needed for `make'
    constants.[ch], interpreter.[ch], io.[ch], parse.[ch]:
                        source code common to tempd and trmc2shell
    tempd.c:            source code of tempd
    trmc2shell.c:       source code of trmc2shell
    interpolate-linear.c:   sample plugin for linear interpolation
    interpolate.c:      interpolation plugin gased on GSL

BUGS

    It doesn't work ;-). Well, not yet.

    The programs won't try to initialize the TRMC2, therefore they don't
    need root privileges, and there is no point in plugging in a TRMC2.
    They do need libtrmc2 though. Their only use right now is to give
    you a feeling of what they will be. For example:

        $ ./trmc2shell 
        trmc2> *idn?
        tempd temperature server, Laboratoire Louis Néel, Jul 2004
        trmc2> board:count?
        trmc2> error?
        _TRMC_NOT_INITIALIZED
        trmc2> so:initialize:it:please!
        trmc2> error?
        NO_SUCH_COMMAND
        trmc2> quit
        $

    You can also play at connecting a client to /tmp/tempd-socket and
    have the same kind of dialog with tempd.

    If you kill tempd instead of asking it to `quit', it will not remove
    /tmp/fieldd-socket. Next time you try to run tempd, it will exit
    immediately and you will see no error message... unless you look in
    your system's logs:

        # grep tempd /var/log/messages
        Jul 16 22:18:05 bonet tempd: bind: Address already in use

    Just remove the socket and restart tempd.

AUTHOR

    Edgar Bonet <bonet@grenoble.cnrs.fr>
